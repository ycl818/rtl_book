[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render , screen } from \"@testing-library/react\";\r\n\r\nfunction RoleExample() {\r\n  return (\r\n    <div>\r\n      <a href=\"/\">Link</a>\r\n      <button>Button</button>\r\n      <footer>ContentInfo</footer>\r\n      <h1>Heading</h1>\r\n      <header>Banner</header>\r\n      <img  alt=\"descrption\" /> Img\r\n      <input type=\"checkbox\" /> Checkbox\r\n      <input type=\"number\" /> SpinButton\r\n      <input type=\"radio\" />  Radio\r\n      <input type=\"text\" /> Textbox\r\n      <li>ListItem</li>\r\n      <ul>List</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<RoleExample/>)","type":"code","id":"l8isr"},{"content":"test(\"can find element by role\", () => {\r\n  render(<RoleExample/>)\r\n\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ];\r\n\r\n  for (let role of roles) {\r\n    const el = screen.getByRole(role)\r\n\r\n    expect(el).toBeInTheDocument();\r\n  }\r\n\r\n})","type":"code","id":"o7ltn"},{"content":"function AccessibleName() {\r\n  return (\r\n    <div>\r\n      <button>Submit</button>\r\n      <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName/>)","type":"code","id":"cewei"},{"content":"test('can select by acessible name', () => {\r\n  render(<AccessibleName />);\r\n\r\n  const submitButton = screen.getByRole('button', { name: /submit/i });\r\n  const cancelButton = screen.getByRole('button', { name: /cancel/i });\r\n\r\n  expect(submitButton).toBeInTheDocument()\r\n  expect(cancelButton).toBeInTheDocument()\r\n})","type":"code","id":"icczk"},{"content":"# Link Inputs to Labels","type":"text","id":"193mg"},{"content":"function MoreNames() {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input id=\"email\" />\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input id=\"search\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames/>)","type":"code","id":"3fdea"},{"content":"test(\"show an email and search input\", () => {\r\n  render(<MoreNames />)\r\n\r\n  const emailInput = screen.getByRole('textbox', {name: /email/i});\r\n  const searchInput = screen.getByRole('textbox', {name: /search/i});\r\n  \r\n  expect(emailInput).toBeInTheDocument()\r\n  expect(searchInput).toBeInTheDocument()\r\n})","type":"code","id":"jzgwv"},{"content":"function IconButtons() {\r\n  return (\r\n    <div>\r\n      <button aria-label=\"sign in\">\r\n        <svg />\r\n      </button>\r\n\r\n       <button aria-label=\"sign out\">\r\n        <svg />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons/>)","type":"code","id":"js36h"},{"content":"test(\"find element based on label\", () => {\r\n  render(<IconButtons />)\r\n\r\n  const signInButton = screen.getByRole('button', {name: /sign in/i})\r\n  const signOutButton = screen.getByRole('button', {name: /sign out/i})\r\n\r\n  expect(signInButton).toBeInTheDocument()\r\n  expect(signOutButton).toBeInTheDocument()\r\n})","type":"code","id":"qt5k1"}]